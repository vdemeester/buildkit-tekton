#syntax=ghcr.io/vdemeester/buildkit-tekton/frontend
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "2"
    pipelinesascode.tekton.dev/on-event: '[pull_request]'
    pipelinesascode.tekton.dev/on-target-branch: '[main]'
    pipelinesascode.tekton.dev/task: '[git-clone, golang-test, .tekton/tasks/buildah.yaml]'
  generateName: buildkit-tekton-go-test-
  labels:
    pipelinesascode.tekton.dev/original-prname: buildkit-tekton-on-pull-request
spec:
  params:
    - name: repo_url
      value: https://github.com/vdemeester/go-helloworld-app
  pipelineSpec:
    params:
      - name: repo_url
    tasks:
    - name: fetch
      params:
        - name: repo_url
          value: $(params.repo_url)
      taskSpec:
        params:
          - name: repo_url
          - name: revision
            default: main
        steps:
          - name: git-init
            image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.21.0
            script: |
              /ko-app/git-init -url=$(params.repo_url) -revision=$(params.revision) -path=$(workspaces.output.path)
            workingDir: $(workspaces.output.path)
        workspaces:
          - name: output
      workspaces:
      - name: output
        workspace: source
    - name: test
      runAfter:
      - fetch
      taskSpec:
        steps:
          - name: unit-test
            image: docker.io/library/golang:1.17
            script: |
              pwd; ls -la; ls -la *; echo $PATH
              go test ./...
            workingDir: $(workspaces.source.path)
        workspaces:
          - name: source
      workspaces:
        - name: source
          workspace: source
    workspaces:
      - name: source
  workspaces:
  - name: source
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
